{"version":3,"sources":["serviceWorker.js","index.js"],"names":["Boolean","window","location","hostname","match","navigator","serviceWorker","ready","then","registration","unregister","board","document","getElementById","context","getContext","lineWidth","canvas","pageWidthHeight","pageWidth","documentElement","clientWidth","pageHeight","clientHeight","width","height","onresize","autoSetCanvasSize","lastPoint","x","undefined","y","using","body","ontouchstart","aaa","touches","clientX","clientY","eraserEnabled","clearRect","ontouchmove","newPoint","drawLine","ontouchend","onmousedown","onmousemove","onmouseup","listenToMouse","pen","eraser","red","green","blue","clear","download","thin","thick","x1","y1","x2","y2","beginPath","moveTo","lineTo","stroke","closePath","onclick","classList","add","remove","strokeStyle","fillStyle","url","toDataURL","a","createElement","appendChild","href","target","click"],"mappings":"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","file":"static/js/main.21f4276c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as serviceWorker from './serviceWorker';\r\nimport './index.css'\r\nserviceWorker.unregister();\r\n\r\n/*设置画板宽高*/\r\nvar board=document.getElementById('xxx');\r\nvar context=board.getContext('2d');\r\nvar lineWidth=5\r\n\r\nautoSetCanvasSize(board)\r\nlistenToMouse(board)\r\n\r\n/*******/\r\nlet pen=document.getElementById('pen');\r\nlet eraser=document.getElementById('eraser');\r\nlet red=document.getElementById('red');\r\nlet green=document.getElementById('green');\r\nlet blue=document.getElementById('blue');\r\nlet clear=document.getElementById('clear');\r\nlet download=document.getElementById('download');\r\nlet thin=document.getElementById('thin');\r\nlet thick =document.getElementById('thick');\r\n\r\nvar eraserEnabled=false\r\n\r\n//绑定事件\r\npen.onclick=function(){\r\n    eraserEnabled=false\r\n    pen.classList.add('active')\r\n    eraser.classList.remove('active')\r\n}\r\neraser.onclick=function(){\r\n    eraserEnabled=true\r\n    eraser.classList.add('active')\r\n    pen.classList.remove('active')\r\n}\r\nred.onclick=function(){\r\n    context.strokeStyle='red'\r\n    context.fillStyle='red'\r\n    red.classList.add('active')\r\n    green.classList.remove('active')\r\n    blue.classList.remove('active')\r\n}\r\ngreen.onclick=function(){\r\n    context.strokeStyle='green'\r\n    context.fillStyle='green'\r\n    green.classList.add('active')\r\n    red.classList.remove('active')\r\n    blue.classList.remove('active')\r\n}\r\nblue.onclick=function(){\r\n    context.strokeStyle='blue'\r\n    context.fillStyle='blue'\r\n    blue.classList.add('active')\r\n    green.classList.remove('active')\r\n    red.classList.remove('active')\r\n}\r\nclear.onclick=function(){\r\n    context.clearRect(0,0,board.width,board.height);\r\n}\r\ndownload.onclick=function(){\r\n    var url = board.toDataURL('image/png')\r\n    var a = document.createElement('a')\r\n    document.body.appendChild(a)\r\n    a.href=url\r\n    a.download='我的画'\r\n    a.target='_blank'\r\n    a.click()\r\n}\r\nthin.onclick=function(){\r\n    lineWidth=5;\r\n}\r\nthick.onclick=function(){\r\n    lineWidth=10;\r\n}\r\n\r\n/*******/\r\nfunction listenToMouse(canvas){     \r\n    var lastPoint={x:undefined,y:undefined}\r\n    var using=false\r\n    //特性检测\r\n    if(document.body.ontouchstart!==undefined){\r\n        canvas.ontouchstart=function(aaa){\r\n            var x=aaa.touches[0].clientX;//相对于视口位置！！！\r\n            var y=aaa.touches[0].clientY;\r\n            using=true\r\n            if(eraserEnabled){   \r\n                context.clearRect(x-5,y-5,10,10)\r\n            }else{\r\n                lastPoint={'x':x,'y':y}\r\n            }    \r\n        }\r\n        canvas.ontouchmove=function(aaa){\r\n           var x=aaa.touches[0].clientX;//相对于视口位置！！！\r\n           var y=aaa.touches[0].clientY;\r\n           if(!using){return}\r\n               if(eraserEnabled){\r\n                   context.clearRect(x-5,y-5,10,10)\r\n               }else{ \r\n                   var newPoint={'x':x,'y':y}\r\n                  // drawCircle(x,y,1)\r\n                   drawLine(lastPoint.x,lastPoint.y,newPoint.x,newPoint.y)\r\n                   lastPoint=newPoint;\r\n               }    \r\n        }\r\n        canvas.ontouchend=function(aaa){\r\n          //console.log('松')\r\n          using=false;\r\n        }\r\n    }else{\r\n        canvas.onmousedown=function(aaa){\r\n            var x=aaa.clientX;//相对于视口位置！！！\r\n            var y=aaa.clientY;\r\n            using=true\r\n            if(eraserEnabled){   \r\n                context.clearRect(x-5,y-5,10,10)\r\n            }else{\r\n                lastPoint={'x':x,'y':y}\r\n                // console.log(lastPoint)\r\n                // drawCircle(x,y,1)\r\n            }    \r\n       }\r\n       canvas.onmousemove=function(aaa){    \r\n           var x=aaa.clientX;//相对于视口位置！！！\r\n           var y=aaa.clientY;\r\n           if(!using){return}\r\n               if(eraserEnabled){\r\n                   context.clearRect(x-5,y-5,10,10)\r\n               }else{ \r\n                   var newPoint={'x':x,'y':y}\r\n                  // drawCircle(x,y,1)\r\n                   drawLine(lastPoint.x,lastPoint.y,newPoint.x,newPoint.y)\r\n                   lastPoint=newPoint;\r\n               }           \r\n       }\r\n       canvas.onmouseup=function(aaa){ using=false;}   \r\n    }              \r\n}        \r\n// function drawCircle(x,y,radius){\r\n//     context.beginPath();\r\n//     context.arc(x,y,radius,0,Math.PI*2)\r\n//     //context.stroke()\r\n//     //context.fillStyle='black';\r\n//     context.fill()\r\n// }\r\nfunction drawLine(x1,y1,x2,y2){\r\n    context.beginPath();\r\n    context.moveTo(x1,y1);//起点\r\n    context.lineWidth=lineWidth\r\n    context.lineTo(x2,y2);//终点\r\n    //context.strokeStyle='black'\r\n    context.stroke();\r\n    context.closePath();\r\n}  \r\nfunction autoSetCanvasSize(canvas){\r\n     //设置canvas宽高 \r\n     pageWidthHeight(); \r\n     window.onresize=function(){pageWidthHeight();}\r\n     function pageWidthHeight(){\r\n         var pageWidth=document.documentElement.clientWidth;\r\n         var pageHeight=document.documentElement.clientHeight;\r\n         canvas.width=pageWidth;\r\n         canvas.height=pageHeight;\r\n     }\r\n     // //描边 \r\n     // context.strokeStyle='yellow';\r\n     // context.strokeRect(10,10,100,100);//rectangle\r\n     // //填充\r\n     // context.fillStyle='blue';\r\n     // context.fillRect(10,10,100,100);//rectangle\r\n     // //橡皮擦\r\n     // //context.clearRect(50,50,10,10);\r\n\r\n     // context.fillStyle='red';\r\n     // context.beginPath();\r\n     // context.moveTo(240,240)\r\n     // context.lineTo(300,240)\r\n     // context.lineTo(300,300)\r\n     // context.fill()\r\n     // context.closePath() \r\n}\r\n"],"sourceRoot":""}